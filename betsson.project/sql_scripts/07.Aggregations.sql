USE BetssonDB;
------------------------------------------
--TOP SELLING PRODUCTS (BY QUANTITY)
SELECT TOP 10
    PRODUCT_SK_ID, 
	D.DESCRIPTION,
    SUM(QUANTITY) AS TOTALQUANTITY
FROM TRG.FACTINVOICE F
INNER JOIN TRG.DIMPRODUCTS D
ON F.PRODUCT_SK_ID = D.SK_ID
WHERE PRODUCT_SK_ID <> 999999
AND PRICE > 0
AND QUANTITY > 0
GROUP BY PRODUCT_SK_ID, DESCRIPTION
ORDER BY TOTALQUANTITY DESC;

--REVENUE CONTRIBUTION BY COUNTRY
SELECT 
    COUNTRY_SK_ID, 
	COUNTRY_NAME,
    SUM(QUANTITY * PRICE) AS TOTALREVENUE
FROM TRG.FACTINVOICE F
INNER JOIN TRG.DIMCOUNTRIES D
ON F.COUNTRY_SK_ID = D.SK_ID
WHERE COUNTRY_SK_ID <> 999999
AND PRICE > 0
AND QUANTITY > 0
GROUP BY COUNTRY_SK_ID, COUNTRY_NAME
ORDER BY TOTALREVENUE DESC;

--REVENUE BY PRODUCT
SELECT 
    PRODUCT_SK_ID, 
    DESCRIPTION, 
    SUM(QUANTITY * PRICE) AS PRODUCTREVENUE
FROM TRG.FACTINVOICE F
INNER JOIN TRG.DIMPRODUCTS P
ON F.PRODUCT_SK_ID = P.SK_ID
WHERE PRODUCT_SK_ID <> 999999
AND PRICE > 0
AND QUANTITY > 0
GROUP BY PRODUCT_SK_ID, DESCRIPTION
ORDER BY PRODUCTREVENUE DESC;

--WEIGHTED AVERAGE PRICE
SELECT 
    INVOICE, 
    SUM(PRICE * QUANTITY) / SUM(QUANTITY) AS WEIGHTEDAVERAGEPRICE
FROM TRG.FACTINVOICE F
WHERE PRODUCT_SK_ID <> 999999 
AND PRICE > 0
AND QUANTITY > 0
GROUP BY INVOICE;

-- TOTAL REVENUE BY DAY
SELECT 
    INVOICE_DATE AS INVOICEDAY, 
    SUM(QUANTITY * PRICE) AS TOTALREVENUE
FROM TRG.FACTINVOICE F
WHERE PRODUCT_SK_ID <> 999999 
AND PRICE > 0
AND QUANTITY > 0
GROUP BY INVOICE_DATE
ORDER BY INVOICEDAY;

-- TOP 10 CLIENTS BASED ON PURCHASES 
SELECT TOP 10
	   CUSTOMER_SK_ID, 
	   SUM(PRICE) AS TOTALPURCHASES
FROM TRG.FACTINVOICE F
WHERE PRODUCT_SK_ID <> 999999 
AND CUSTOMER_SK_ID <> 999999 
AND PRICE > 0
AND QUANTITY > 0
GROUP BY CUSTOMER_SK_ID
ORDER BY TOTALPURCHASES DESC;